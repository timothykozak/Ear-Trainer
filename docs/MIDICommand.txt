MIDI Commands

The command bytes are split into half. The most significant nibble contains the actual MIDI command,
and the second nibble contains the MIDI channel for which the command is for.
For example, 0x91 is the note-on command for the second MIDI channel.
The 9 digit is the actual command for note-on and the digit 1 specifies the second channel
(the first channel being 0). The 0xF0 set of commands do not follow this convention.

MIDI commands

0x80     Note Off
0x90     Note On
0xA0     Aftertouch
0xB0     Continuous controller
0xC0     Patch change
0xD0     Channel Pressure
0xE0     Pitch bend
0xF0     (non-musical commands)

The messages from 0x80 to 0xEF are called Channel Messages because the second nibble of the command
specify which channel the message affects. The messages from 0xF0 to 0xFF are called System Messages.
They do not affect any particular channel.

MIDI messages

A MIDI command plus its MIDI data parameters to be called a MIDI message . The minimum size of a MIDI message is 1 byte (one command byte and no parameter bytes). The maximum size of a MIDI message (note considering 0xF0 commands) is three bytes. A MIDI message always starts with a command byte. Here is a table of the MIDI messages that are possible in the MIDI protocol:

Command     Meaning 	            # parameters    param 1     param 2
0x80        Note-off                    2               key     velocity
0x90        Note-on                     2               key     veolcity
0xA0        Aftertouch                  2               key     touch
0xB0        Continuous controller       2       controller #    controller value
0xC0        Patch change                2       instrument #
0xD0        Channel Pressure            1       pressure
0xE0        Pitch bend                  2       lsb (7 bits)    msb (7 bits)
0xF0        (non-musical commands)

